# This is a basic workflow to help you get started with Actions

name: HeyThereAutomated

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
  schedule:
    - cron: "01 00 * * *"
      
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    # commit the output folder
    - name: Clean pull the project
      run: |
           git reset --hard HEAD
           git pull --force

    # Runs a single command using the runners shell
    - name: Run hey there and fact of the day
      run: |
           DaySuffix() {
              case `date +%d` in
                01|21|31) echo "st";;
                02|22)    echo "nd";;
                03|23)    echo "rd";;
                *)       echo "th";;
              esac
           }
           day=fact_$(date +%b)-$(date +%d)
           fact_of_the_day=$(curl -sk ${{ secrets.FACTS_OF_THE_DAY }} | jq -rc --arg day "$day" '.data[] | select(.meta_key==$day) | .meta_value') 
           img_of_the_day=$(curl -sk ${{ secrets.FACTS_OF_THE_DAY }} | jq -rc --arg day "$day" '.data[] | select(.meta_key==$day) | .meta_img') 
           imgURL_of_the_day=$(curl -sk ${{ secrets.FACTS_OF_THE_DAY }} | jq -rc --arg day "$day" '.data[] | select(.meta_key==$day) | .meta_img_url') 
           echo $day $fact_of_the_day
           echo -e $'## Hey there ðŸ‘‹\nHave an amazing `'$(date +%A)'` âš¡âš¡âš¡\n\nDid you know Today on `'$(date +%d`DaySuffix`)' of '$(date +%B)'`\n \n [<img src="'$img_of_the_day'" width="300" />]('$imgURL_of_the_day') \n ```\n'$fact_of_the_day'\n```' > README.md

    # commit the output folder
    - name: Commit files
      env:
        EMAIL_VIP: ${{ secrets.EMAIL_VIP }}
      run: |
          git config --local user.email $EMAIL_VIP
          git config --local user.name Vipin
          git config pull.ff only
          git status
          git add README.md
          git commit -m "update: hey of the day"
          git push
